问题：1.主动换道行为触发过于频繁
		原因：
			因为是采用二元的价值判断模型，并且没有限制区域内车辆允许转向的数量，小范围内多个车辆同时换道时，会进入一个不稳定的状态
		考虑：
			试着加上换道频率的限制，这种修改感觉不具有普适性。感觉还是要在Car中维护一个周围车辆的集合来判定。
			还是应该从换道费用函数本身入手，比如在不稳定换道情况下（换出道路后又立即换入原道路）发出警告提醒用户费用函数不合理
      
	  2.偶发性的卡死问题，涉及到程序的高可用
		原因：
			每次换道结束之后，车身还未完全摆正（朝向的最后一个目标点处曲率不平直）即因为触发新一次换道行为而计	算路径，在算第二个点时加上的车辆朝向即出现问题
		考虑：
			1.限定换道曲线最后一段曲率平直（涉及到换道路径计算的模块，用户也可能编写一个不合理的换道算法，我们应该确保程序的高可用性）
			2.换道流程结束后强制运行一段时间保证顺从路径曲率（车辆行驶曲率突变，不符合实际行驶）

	  3.中间车道接受两旁车道同时的换道来车时，两辆车可能重合
		原因：
			未考虑换道车辆的冲突，现在只有道路内与换道中车辆的冲突解决
		考虑：
			还是在Car中维护一个周围车辆的集合，当集合内有车辆换道时不予换道。
				但是集合设置的大小也不好说，锁左右5条车道的横向范围太大了。只锁周围3条车道解决不了问题，在同时换道时无法检测，换道*换道的冲突行驶难以解决


需要解决的问题：
	1.冲突
		复杂的模型，中期大概做不完。中期检查是报告加PPT形式，先也可不用解决。
		考虑：
			对每个车辆维护一个followCar保持不相撞的跟驰，但还是要考虑到让行的规则与实现

期中急需解决的问题：
	1.一个合理的换道模型整体
		包括：1.主动触发换道指令（一个换道判定的模型）与被动触发（面板控制）-- Car.lineChange与positiveChange（）
			  2.换道费用函数--JudgeValue（）
			  3.目标道路选取--NearLinePick（）
			  4.换道确认（排除换道到当前道路）-- SuccessChange（）
	2.更多的用于替换的跟驰模型
		现在对跟驰模型之间的不同只体现在最后计算出的加速度上面
	3.道路与车辆属性展示面板
	4.路网的生成与存储
		但是现在关于交叉口冲突设定还没弄，有点僵硬
	5.动态替换模型的实践